{"meta":{"title":"江湖渔民的博客","subtitle":"","description":"","author":"harry.gao","url":"https://harry-gcb.github.io","root":"/"},"pages":[{"title":"about","date":"2023-04-24T13:22:29.000Z","updated":"2023-04-24T13:26:11.947Z","comments":true,"path":"about/index.html","permalink":"https://harry-gcb.github.io/about/index.html","excerpt":"","text":"关于我Software Engineer@Zoom China"}],"posts":[{"title":"git submodule","slug":"git-submodule","date":"2023-04-24T13:59:43.000Z","updated":"2023-04-24T15:35:04.469Z","comments":true,"path":"2023/04/24/git-submodule/","link":"","permalink":"https://harry-gcb.github.io/2023/04/24/git-submodule/","excerpt":"","text":"项目中经常使用第三方模块，使用git子模块可以将第三方git仓库作为一个子目录，在保持独立提交的同时，不必负责子模块的维护，只需要在使用的时候同步更新子模块即可，能够大大提升开发效率。 本文是对git子模块命令的一个简介，详细使用参考man page。 添加子模块添加子模块的命令非常简单：git submodule add &lt;url&gt; &lt;path&gt;，其中url为远程仓库地址，path为子模块的本地目录。如下面的例子： 1git submodule add git@github.com:harry-gcb/hexo-theme-yilia.git themes/yilia 执行成功后，可以看到themes下面多了yilia目录，这就是刚下载的子模块。 添加子模块后，如果运行git status，可以看到新增了themes/yilia和.gitmodules，.gitmodules则用来保持子模块的信息。.gitmodules中的内容如下 123[submodule &quot;themes/yilia&quot;] path = themes/yilia url = git@github.com:harry-gcb/hexo-theme-yilia.git 其中path和url即使添加子模块使用的参数。 git diff --cached查看修改内容可以看到增加了子模块，并且新文件下为子模块的提交hash摘要 git commit提交即完成子模块的添加 更新子模块更新项目内子模块到最新版本git submodule update 更新子模块为远程项目的最新版本git submodule update --remote 或者进入子模块目录进行git pull/push等操作 删除子模块删除子模块比较复杂，因为子模块的维护地址可能发生变化，或者需要替换子模块，这时就需要删除原有的子模块 删除子模块缓存 1git rm --cached themes/yilia 删除子模块文件夹 1rm -rf themes/yilia 删除.gitmodules中关于子模块的信息 1234vim .gitmodules#[submodule &quot;themes/yilia&quot;]# path = themes/yilia# url = git@github.com:harry-gcb/hexo-theme-yilia.git 删除.git/config中关于子模块的信息 1234vim .git/config#[submodule &quot;themes/yilia&quot;]# url = git@github.com:harry-gcb/hexo-theme-yilia.git# active = true 删除.git/modules中子模块对应的目录 1rm -rf .git/modules/themes/yilia clone包含子模块的项目如果只是用git clone克隆一个包含子模块的项目时，默认子模块目录下可能没有任何内容，需要执行一下命令下载子模块 12git submodule initgit submodule update 或者 1git submodule update --init --recursive 如果是第一次git clone下载主仓库的项目，也可以使用以下命令将主仓库和子模块的所有内容都下载下来 1git clone --recursive &lt;url&gt; 以后可以在子模块仓库中使用git pull和git push等命令进行更新合并等操作 参考 git中submodule子模块的添加、使用和删除 Git: submodule 子模块简明教程 Git 工具 - 子模块","categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://harry-gcb.github.io/tags/git/"}]},{"title":"Github+Hexo搭建个人博客","slug":"github-hexo-blog","date":"2023-04-22T06:07:03.000Z","updated":"2023-04-24T14:00:08.829Z","comments":true,"path":"2023/04/22/github-hexo-blog/","link":"","permalink":"https://harry-gcb.github.io/2023/04/22/github-hexo-blog/","excerpt":"","text":"本文内容主要记录Hexo+Github搭建个人博客的过程，以及后续维护时如何添加新的feature 环境准备 node.js git 这两个应用直接在官网下载安装即可 安装hexo安装hexo 1npm install hexo-cli -g 选择合适的目录，创建博客文件夹 123cd &lt;folders&gt;hexo initnpm install 配置github本地配置github ssh连接，方便自动部署，具体过程略 新建仓库，仓库名必须为github_username.github.io 安装hexo-deployer-git 1npm install hexo-deployer-git 修改站点配置 12345## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repository: git@github.com:harry-gcb/harry-gao.github.io.git branch: main 文章编写与发布在根目录输入hexo new post &quot;article title&quot;即可新建一篇文章，此时可以发现_posts下面多了个一个article-title.md文件。在这个markdown文件中编写文章后，输入一下命令即可生成、浏览和发布文章 hexo g 生成静态网页 hexo s打开本地网页预览效果 hexo d部署到github，打开github_username.github.io即可浏览文章 主题安装hexo的主题安装及其简单，选择一款喜欢的主题下载到themes目录下，然后将根目录_config.yml中的theme设置为自己的主题即可。我选择使用yilia这款主题，主要是出于简洁和性能的考量，但是原作者好像已经不再维护了，有些功能需要自己摸索。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://harry-gcb.github.io/tags/hexo/"}]}],"categories":[],"tags":[{"name":"git","slug":"git","permalink":"https://harry-gcb.github.io/tags/git/"},{"name":"hexo","slug":"hexo","permalink":"https://harry-gcb.github.io/tags/hexo/"}]}